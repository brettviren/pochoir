#+title: Solve field response with FDM
#+EXPORT_FILE_NAME: index.html

* Overview

See also

- the [[file:overview.org][overview]] for high level parts.
- the [[file:manual.org][manual]] for details.

The ~pochoir~ package solves for /field responses/ which model the current
induced in electrodes by electric charge (eg, electrons from
ionization) drifting through an electrostatic field applied to the
electrodes.

The overall solution is factored into a number of core sub-problems:

- Specify electrodes and their potentials on a problem domain.
- Solve Laplace /boundary value problems/ in 2D and 3D using the
  finite-difference method (FDM) to determine the electrostatic
  potential fields from the applied and the "weighting" electrode
  voltages.
- Solve the /initial value problem/ to determine paths of charge
  driftiing in the applied potential.
- Apply the [[https://en.wikipedia.org/wiki/Shockley%E2%80%93Ramo_theorem][Shockley-Ramo theorem]] to combine the above solutions to
  get currents induced in electrodes.

These sub-problems may be composed by connecting output from one to
input of another through the ~pochoir~ data store.  ~pochoir~ can also
convert data in the store to graphics formats (PNG or PDF) for
visualization and can export to other formats (VTK) for use in other
visualization tools (~paraview~).  The ~pochoir~ store may use an HDF5
file.  Following an HDF5 model, ~pochoir~ may also use a collection of
Numpy NPZ (dataset) and JSON (metadata) files grouped by file system
directories.

** The name

The core Laplace problems are solved in ~pochoir~ with FDM.  The core
operation of FDM is sometimes described as a "stencil" convolution.
The name /pochoir/ describes a stencil-based art style.  No constraint
is intended on your personal [[https://www.google.com/search?q=pronounce+pochoir][pronunciation of "pochoir"]].


* Install

~pochoir~ installs in the "usual Python way".  Use of ~pip~ and a Python
virtual environment is recommended.  

Eg:

#+begin_example
python3 -m venv venv
source venv/bin/activiate
#+end_example

Or maybe you prefer ~direnv~

#+begin_example
echo layout python3 > .envrc
direnv allow
#+end_example

Then install either for use:

#+begin_example
pip install git+https://github.com/brettviren/pochoir.git@HEAD
#+end_example

Or for development

#+begin_example
git clone git@github.com:brettviren/pochoir.git
cd pochoir
pip install -e .
#+end_example

Additional commands may be needed to allow PyTorch to use your GPU.


* Usage

The ~pochoir~ command line user interface provides online help:

#+begin_src shell :exports both :results output code :wrap example
pochoir
#+end_src

#+RESULTS:
#+begin_example
Usage: pochoir [OPTIONS] COMMAND [ARGS]...

  pochoir command line interface

Options:
  -s, --store PATH         File for primary data storage (input and maybe
                           output)

  -o, --outstore PATH      File for output (primary only input)
  -d, --device [cpu|cuda]  Set device on which to calculate
  --help                   Show this message and exit.

Commands:
  domain            Produce a "domain" and store it to the output dataset.
  example           Generate a boundary and initial array example (try...
  export-vtk-image  Export a dataset to a vtk file of same name
  fdm               Solve a Laplace boundary value problem with finite...
  grad              Calculate the gradient of a scalar field.
  init              Initialize a problem with a shape file.
  plot-image        Visualize a dataset as 2D image
  plot-quiver       Visualize a 2D or 3D vector field as a "quiver" plot.
  version           Print the version
#+end_example

Of particular note, one may set the store via an environment variable:

#+begin_example
export POCHOIR_STORE=/path/to/store
#+end_example

Individual commands provide more details on their use:

#+begin_src shell :exports both :results output code :wrap example
pochoir fdm --help
#+end_src

#+RESULTS:
#+begin_example
Usage: pochoir fdm [OPTIONS] SOLUTION ERROR

  Solve a Laplace boundary value problem with finite difference method
  storing the result as named solution.  The error names an output array to
  hold difference in last two iterations.

Options:
  -i, --initial TEXT     Name initial value array
  -b, --boundary TEXT    Name the boundary array
  -e, --edges TEXT       Comma separated list of 'fixed' or 'periodic' giving
                         domain edge conditions

  --precision FLOAT      Finish when no changes larger than precision
  --epoch INTEGER        Number of iterations before any check
  -n, --nepochs INTEGER  Limit number of epochs (def: one epoch)
  --help                 Show this message and exit.
#+end_example

Again, see the [[file:manual.org][manual]] for more details.
